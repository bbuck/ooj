{"name":"Ooj","body":"### OOJ - Object Oriented Javascript\r\n\r\nOOJ is an attempt to simplify Object Oriented Javascript by offering a lightweight solution to developing classes, interfaces, and abstract classes with a means to extend, implement and use them with ease. Clone OOJ  to use/improve it with:\r\n\r\n```\r\ngit clone git@github.com:bbuck/ooj.git\r\n```\r\n\r\n### Proposed Use\r\nSince OOJ is currently in a non-usable state (it's undergoing some basic framework restructuring) I will sample the current idea of interacting with OOJ with a few simple examples.\r\n\r\nFirst, we will define a \"Fruit\" interface:\r\n\r\n```javascript\r\nvar Fruit = ooj.Interface({\r\n  properties: [\r\n    \"name\",\r\n    \"state\"\r\n  ],\r\n  functions: [\r\n    \"eat\"\r\n  ]\r\n});\r\n```\r\n\r\nSimple enough, we could instantiate a Fruit but it wouldn't do us much good:\r\n\r\n```javascript\r\nvar Apple = new Fruit(); // Throws an Error: \"Interfaces cannot be instantiated\"\r\n```\r\n\r\nFrom there, we can define a subclass called \"Apple\":\r\n\r\n```javascript\r\nvar Apple = ooj.Class({\r\n  implement: Fruit, // This could essentially be an array too if you were implementing more than one interface\r\n  name: \"Apple\",\r\n  state: \"Uneaten\",\r\n  eat: function() {\r\n    this.state = \"Eaten\";\r\n  }\r\n});\r\n```\r\n\r\nFrom this class definition we can then do:\r\n\r\n```javascript\r\nvar myApple = new Apple();\r\nconsole.log(myApple.state);\r\n// \"Uneaten\"\r\nmyApple.eat();\r\n// \"Eaten\"\r\n```\r\n\r\nThe use here my not be 100% clear but if you need the use of interfaces you can guarantee any class that implements them will contain the properties and functions of the interface. Interfaces will be able to define properties (static) but will ignore any function definitions. If you wish to define default function behavior then Abstract classes may be what you are after.\r\n\r\nThe idea behind OOJ is, again, to simplify and bring an OOP feel to Javascript.\r\n\r\n### Authors and Contributors\r\n@bbuck is the Author of this project. He decided to build it because the \"Object Oriented\" Javascript hacks he found were too fractured to make OOP programming in Javascript simple so he began work on OOJ to bring them all into a single library.\r\n\r\n### Support or Contact\r\nHaving issues with OOJ? Post them at [OOJ issues page](https://github.com/bbuck/ooj/issues).","tagline":"An Object Oriented Library for JavaScript","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}